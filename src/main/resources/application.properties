#
# El banner debe de ser desplegado
#
quarkus.banner.enabled=true

#
# El archivo del banner que será desplegado
#
quarkus.banner.path=banner.txt

#
# El nivel de la bitacora.
#
# JBoss Logging soporta los estilos de bitacora de Apache:
#
# * {@link org.jboss.logmanager.Level#FATAL}
# * {@link org.jboss.logmanager.Level#ERROR}
# * {@link org.jboss.logmanager.Level#WARN}
# * {@link org.jboss.logmanager.Level#INFO}
# * {@link org.jboss.logmanager.Level#DEBUG}
# * {@link org.jboss.logmanager.Level#TRACE}
#
quarkus.log.level=INFO
# Log de camel para visualizar el exchange
quarkus.log.category."exchangeLog".level=DEBUG

# ===================================================================
# PROPIEDADES DE CAMEL
#
# Propiedades de la tecnología de camel.
# 
# ===================================================================
#
# Camel Rutas
camel.main.xml-routes=classpath:routes/routes.xml
# Camel plantillas
# camel.main.xml-route-templates=classpath:templates/route-template.xml
# Camel servicios REST
camel.main.xml-rests=classpath:rests/rests.xml

# Camel Health checks
camel.health.contextEnabled=true
camel.health.routesEnabled=false
camel.health.registryEnabled=false

custom.hello.url=http://localhost:8080
custom.hello.prefix=0

# ===================================================================
# PROPIEDADES PERSONALIZADAS DE LA APLICACION
#
# Se pueden sobre escribir las propiedades del archivo principal
# en cualquier momento.
# ===================================================================
app-config.default-name=Pluton
app-config.greeting=Hola
app-config.sufix=!!


# ===================================================================
# PROPIEDADES PARA EL DESPLIEGUE
#
# Las siguientes propiedades se han puesto para el despliegue
# dentro de openshift ten cuidado al moverlas ya
# ===================================================================

# Si se estan usando certificados autofirmados
quarkus.kubernetes-client.trust-certs=true

# Para habilitar la generación de los recursos de openshift
# se necesita incluir openshift como destino de la plataforma.
quarkus.kubernetes.deployment-target=openshift

# Para indicar a OpenShift que use la imagen Open JDK 11 Red Hat Enterprise Linux 7
quarkus.s2i.base-jvm-image=registry.access.redhat.com/openjdk/openjdk-11-rhel7:latest

# Para crear una ruta automáticamente para este servicio en Openshift
# no se recomienda mas que su uso por línea de comando
quarkus.openshift.expose=false

# Número de contenedores por defecto
quarkus.openshift.replicas=1


# Propiedades para la prueba de "readiness"
quarkus.openshift.readiness-probe.initial-delay=20s
quarkus.openshift.readiness-probe.period=45s

# Propiedades para la prueba de "liveness"
quarkus.openshift.liveness-probe.initial-delay=20s
quarkus.openshift.liveness-probe.period=45s

# quarkus.kubernetes-config.enabled=true
# quarkus.kubernetes-config.config-maps=cm-jn-quarkus-base
quarkus.openshift.mounts.my-volume.path=/deployments/config
quarkus.openshift.config-map-volumes.my-volume.config-map-name=cm-jn-quarkus-base

# Se activan las métricas para REST
quarkus.resteasy.metrics.enabled=true

# Possible quarkus.package.type are: jar, fast-jar, uber-jar and native.
# quarkus.package.uber-jar=true
# quarkus.package.type=fast-jar

